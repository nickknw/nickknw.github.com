<html><head><title>./dwsim/dwsim/DWSIM/Classes/Math/LP_Solve</title> 
	<style type="text/css">
	    body { font-family: georgia, serif; }
	    h1 { color: #111111 }
	    li { font-family: Consolas, monospace; font-size: 14px; margin-bottom:20px; list-style-type: none; word-wrap:break-word; }
	    .line_count { color: #000080; font-family: Consolas, monospace;}
	    .method_count { color: #008080; font-family: Consolas, monospace;}
	    .signature { font-size: 12px; }
	    .inside_method { background-color: #eeeeee; }
	    .detail_page { font-family: Consolas, monospace; font-size: 14px; word-wrap: break-word}
	    .method_name { background-color: #ccccee ; font-weight: bold; }
	    .type { background-color: aaffbb; font-weight: bold; }
	    .inside_if { background-color:#CCEECC; }
	    .inside_loop { background-color:#EECCCC; }
	    .inside_loop .inside_if { background-color:#BBBBAA; }
	    .inside_if .inside_loop { background-color:#CCAAAA; }
	    .comment { color: #777777; }
	    p { display: inline; margin: 0px; padding: 0px; }
	    div { display: inline; margin: 0px; padding: 0px; }
	    #legend { font-family: Consolas, monospace; font-size: 14px; margin-bottom:10px; }
	    #legend td { padding-right: 15px; }
	</style></head><body>
<h2>./dwsim/dwsim/DWSIM/Classes/Math/LP_Solve: <span class='method_count'>231m</span> <span class='line_count'>&nbsp;452L&nbsp;&nbsp;&nbsp;</span></h2><div class='detail_page'>

    <table id="legend">
	<tr><td style="padding-bottom:10px;"><span style="font-size:18px; font-family: georgia, serif; font-weight: bold;">Legend</span></td></tr>
	<tr><td><span class="method_count">14m</span> means 14 methods</td> <td><span class="line_count">294L</span> means 294 lines</td> </tr>
	<tr><td>a space is a blank line</td><td>. is a (non-blank) line</td> </tr>
	<tr><td><span class='inside_if'>?</span> is a single line If statement</td><td>' is a commented line</td></tr>
        <tr><td><span class='inside_if'>|</span> is an Else or Case statement</td><td><div class='inside_method'>{Inside a method}</div></td></tr>
	<tr><td><span class='inside_if'>(Inside an if block)</span></td><td><p class='inside_loop'>[Inside a loop]</p></td></tr>
	<tr><td><p class='inside_loop'><span class='inside_if'>[(An if block inside a loop)]</span></p></td><td> <span class='inside_if'><p class='inside_loop'>([A loop inside an if block])</p></span></td></tr>
    </table>
.. . <span class='comment'>'</span> <br>Private Declare Function <span class='method_name'>SetEnvironmentVariableA Lib "kernel32" </span>&#40;ByVal lpname <span class='type'>As String</span>, ByVal lpValue <span class='type'>As String</span>&#41; <span class='type'>As Integer</span><br><br>Private Declare Function <span class='method_name'>GetEnvironmentVariableA Lib "kernel32" </span>&#40;ByVal lpname <span class='type'>As String</span>, ByVal lpBuffer <span class='type'>As String</span>, ByVal nSize <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br> <span class='comment'>'</span> <br>Public Declare Function <span class='method_name'>add_column Lib "lpsolve55.dll" Alias "add_column" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>add_columnex Lib "lpsolve55.dll" Alias "add_columnex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal rowno<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>add_constraint Lib "lpsolve55.dll" Alias "add_constraint" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal constr_type <span class='type'>As lpsolve_constr_types</span>, ByVal rh <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>add_constraintex Lib "lpsolve55.dll" Alias "add_constraintex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal colno<span class='inside_if'>(&#41; <span class='type'>As Integer</span>, ByVal constr_type <span class='type'>As lpsolve_constr_types</span>, ByVal rh <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>add_lag_con Lib "lpsolve55.dll" Alias "add_lag_con" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal con_type <span class='type'>As lpsolve_constr_types</span>, ByVal rhs <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>add_SOS Lib "lpsolve55.dll" Alias "add_SOS" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal name <span class='type'>As String</span>, ByVal sostype <span class='type'>As Integer</span>, ByVal priority <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal sosvars<span class='inside_if'>(&#41; <span class='type'>As Integer</span>, ByVal weights<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>column_in_lp Lib "lpsolve55.dll" Alias "column_in_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>copy_lp Lib "lpsolve55.dll" Alias "copy_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Sub <span class='method_name'>default_basis Lib "lpsolve55.dll" Alias "default_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>del_column Lib "lpsolve55.dll" Alias "del_column" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>del_constraint Lib "lpsolve55.dll" Alias "del_constraint" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal del_row <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>delete_lp Lib "lpsolve55.dll" Alias "delete_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>dualize_lp Lib "lpsolve55.dll" Alias "dualize_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_anti_degen Lib "lpsolve55.dll" Alias "get_anti_degen" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_anti_degen</span><br><br>Public Declare Function <span class='method_name'>get_basis Lib "lpsolve55.dll" Alias "get_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal bascolumn<span class='inside_if'>(&#41; <span class='type'>As Integer</span>, ByVal nonbasic <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_basiscrash Lib "lpsolve55.dll" Alias "get_basiscrash" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_basiscrash</span><br><br>Public Declare Function <span class='method_name'>get_bb_depthlimit Lib "lpsolve55.dll" Alias "get_bb_depthlimit" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_bb_floorfirst Lib "lpsolve55.dll" Alias "get_bb_floorfirst" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_branch</span><br><br>Public Declare Function <span class='method_name'>get_bb_rule Lib "lpsolve55.dll" Alias "get_bb_rule" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_BBstrategies</span><br><br>Public Declare Function <span class='method_name'>get_bounds_tighter Lib "lpsolve55.dll" Alias "get_bounds_tighter" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_break_at_value Lib "lpsolve55.dll" Alias "get_break_at_value" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_col_name Lib "lpsolve55.dll" Alias "get_col_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As String</span><br><br>Public Declare Function <span class='method_name'>get_column Lib "lpsolve55.dll" Alias "get_column" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal col_nr <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_columnex Lib "lpsolve55.dll" Alias "get_columnex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal col_nr <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal nzrow<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_constr_type Lib "lpsolve55.dll" Alias "get_constr_type" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_constr_types</span><br><br>Public Declare Function <span class='method_name'>get_constr_value Lib "lpsolve55.dll" Alias "get_constr_value" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal primsolution<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal nzindex<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_constraints Lib "lpsolve55.dll" Alias "get_constraints" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal constr<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_dual_solution Lib "lpsolve55.dll" Alias "get_dual_solution" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal rc<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_epsb Lib "lpsolve55.dll" Alias "get_epsb" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_epsd Lib "lpsolve55.dll" Alias "get_epsd" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_epsel Lib "lpsolve55.dll" Alias "get_epsel" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_epsint Lib "lpsolve55.dll" Alias "get_epsint" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_epsperturb Lib "lpsolve55.dll" Alias "get_epsperturb" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_epspivot Lib "lpsolve55.dll" Alias "get_epspivot" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_improve Lib "lpsolve55.dll" Alias "get_improve" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_improves</span><br><br>Public Declare Function <span class='method_name'>get_infinite Lib "lpsolve55.dll" Alias "get_infinite" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_lambda Lib "lpsolve55.dll" Alias "get_lambda" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal lambda<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_lowbo Lib "lpsolve55.dll" Alias "get_lowbo" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_lp_index Lib "lpsolve55.dll" Alias "get_lp_index" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal orig_index <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_lp_name Lib "lpsolve55.dll" Alias "get_lp_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As String</span><br><br>Public Declare Function <span class='method_name'>get_Lrows Lib "lpsolve55.dll" Alias "get_Lrows" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_mat Lib "lpsolve55.dll" Alias "get_mat" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_max_level Lib "lpsolve55.dll" Alias "get_max_level" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_maxpivot Lib "lpsolve55.dll" Alias "get_maxpivot" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_mip_gap Lib "lpsolve55.dll" Alias "get_mip_gap" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal absolute <span class='type'>As Boolean</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_Ncolumns Lib "lpsolve55.dll" Alias "get_Ncolumns" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_negrange Lib "lpsolve55.dll" Alias "get_negrange" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_nameindex Lib "lpsolve55.dll" Alias "get_nameindex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal name <span class='type'>As String</span>, ByVal isrow <span class='type'>As Boolean</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_nonzeros Lib "lpsolve55.dll" Alias "get_nonzeros" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_Norig_columns Lib "lpsolve55.dll" Alias "get_Norig_columns" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_Norig_rows Lib "lpsolve55.dll" Alias "get_Norig_rows" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_Nrows Lib "lpsolve55.dll" Alias "get_Nrows" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_obj_bound Lib "lpsolve55.dll" Alias "get_obj_bound" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_objective Lib "lpsolve55.dll" Alias "get_objective" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_orig_index Lib "lpsolve55.dll" Alias "get_orig_index" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal lp_index <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_origcol_name Lib "lpsolve55.dll" Alias "get_origcol_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As String</span><br><br>Public Declare Function <span class='method_name'>get_origrow_name Lib "lpsolve55.dll" Alias "get_origrow_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>&#41; <span class='type'>As String</span><br><br>Public Declare Function <span class='method_name'>get_pivoting Lib "lpsolve55.dll" Alias "get_pivoting" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_piv_rules</span><br><br>Public Declare Function <span class='method_name'>get_presolve Lib "lpsolve55.dll" Alias "get_presolve" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_presolve</span><br><br>Public Declare Function <span class='method_name'>get_presolveloops Lib "lpsolve55.dll" Alias "get_presolveloops" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_primal_solution Lib "lpsolve55.dll" Alias "get_primal_solution" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal pv_Renamed<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_print_sol Lib "lpsolve55.dll" Alias "get_print_sol" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_PseudoCosts Lib "lpsolve55.dll" Alias "get_PseudoCosts" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal clower<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal cupper<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal updatelimit<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_rh Lib "lpsolve55.dll" Alias "get_rh" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_rh_range Lib "lpsolve55.dll" Alias "get_rh_range" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_row Lib "lpsolve55.dll" Alias "get_row" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_nr <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_rowex Lib "lpsolve55.dll" Alias "get_rowex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_nr <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal colno<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_row_name Lib "lpsolve55.dll" Alias "get_row_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>&#41; <span class='type'>As String</span><br><br>Public Declare Function <span class='method_name'>get_scalelimit Lib "lpsolve55.dll" Alias "get_scalelimit" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_scaling Lib "lpsolve55.dll" Alias "get_scaling" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_scales</span><br><br>Public Declare Function <span class='method_name'>get_sensitivity_obj Lib "lpsolve55.dll" Alias "get_sensitivity_obj" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal objfrom<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal objtill<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_sensitivity_objex Lib "lpsolve55.dll" Alias "get_sensitivity_objex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal objfrom<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal objtill<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal objfromvalue<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal objtillvalue<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_sensitivity_rhs Lib "lpsolve55.dll" Alias "get_sensitivity_rhs" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal duals<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal dualsfrom<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal dualstill<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_simplextype Lib "lpsolve55.dll" Alias "get_simplextype" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_simplextypes</span><br><br>Public Declare Function <span class='method_name'>get_solutioncount Lib "lpsolve55.dll" Alias "get_solutioncount" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_solutionlimit Lib "lpsolve55.dll" Alias "get_solutionlimit" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_status Lib "lpsolve55.dll" Alias "get_status" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_statustext Lib "lpsolve55.dll" Alias "get_statustext" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal statuscode <span class='type'>As Integer</span>&#41; <span class='type'>As String</span><br><br>Public Declare Function <span class='method_name'>get_timeout Lib "lpsolve55.dll" Alias "get_timeout" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_total_iter Lib "lpsolve55.dll" Alias "get_total_iter" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Long</span><br><br>Public Declare Function <span class='method_name'>get_total_nodes Lib "lpsolve55.dll" Alias "get_total_nodes" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Long</span><br><br>Public Declare Function <span class='method_name'>get_upbo Lib "lpsolve55.dll" Alias "get_upbo" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_var_branch Lib "lpsolve55.dll" Alias "get_var_branch" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_branch</span><br><br>Public Declare Function <span class='method_name'>get_var_dualresult Lib "lpsolve55.dll" Alias "get_var_dualresult" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal index <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_var_primalresult Lib "lpsolve55.dll" Alias "get_var_primalresult" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal index <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>get_var_priority Lib "lpsolve55.dll" Alias "get_var_priority" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_variables Lib "lpsolve55.dll" Alias "get_variables" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal var<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>get_verbose Lib "lpsolve55.dll" Alias "get_verbose" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>get_working_objective Lib "lpsolve55.dll" Alias "get_working_objective" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Function <span class='method_name'>guess_basis Lib "lpsolve55.dll" Alias "guess_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal guessvector<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal basisvector<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>has_BFP Lib "lpsolve55.dll" Alias "has_BFP" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>has_XLI Lib "lpsolve55.dll" Alias "has_XLI" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_add_rowmode Lib "lpsolve55.dll" Alias "is_add_rowmode" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_anti_degen Lib "lpsolve55.dll" Alias "is_anti_degen" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal testmask <span class='type'>As lpsolve_anti_degen</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_binary Lib "lpsolve55.dll" Alias "is_binary" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_break_at_first Lib "lpsolve55.dll" Alias "is_break_at_first" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_constr_type Lib "lpsolve55.dll" Alias "is_constr_type" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal mask <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_debug Lib "lpsolve55.dll" Alias "is_debug" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_feasible Lib "lpsolve55.dll" Alias "is_feasible" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal values<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal threshold <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_infinite Lib "lpsolve55.dll" Alias "is_infinite" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal value <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_int Lib "lpsolve55.dll" Alias "is_int" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_integerscaling Lib "lpsolve55.dll" Alias "is_integerscaling" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_lag_trace Lib "lpsolve55.dll" Alias "is_lag_trace" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_maxim Lib "lpsolve55.dll" Alias "is_maxim" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_nativeBFP Lib "lpsolve55.dll" Alias "is_nativeBFP" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_nativeXLI Lib "lpsolve55.dll" Alias "is_nativeXLI" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_negative Lib "lpsolve55.dll" Alias "is_negative" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_piv_mode Lib "lpsolve55.dll" Alias "is_piv_mode" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal testmask <span class='type'>As lpsolve_piv_rules</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_piv_rule Lib "lpsolve55.dll" Alias "is_piv_rule" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal rule <span class='type'>As lpsolve_piv_rules</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_presolve Lib "lpsolve55.dll" Alias "is_presolve" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal testmask <span class='type'>As lpsolve_presolve</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_scalemode Lib "lpsolve55.dll" Alias "is_scalemode" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal testmask <span class='type'>As lpsolve_scales</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_scaletype Lib "lpsolve55.dll" Alias "is_scaletype" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal scaletype <span class='type'>As lpsolve_scales</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_semicont Lib "lpsolve55.dll" Alias "is_semicont" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_SOS_var Lib "lpsolve55.dll" Alias "is_SOS_var" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_trace Lib "lpsolve55.dll" Alias "is_trace" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_unbounded Lib "lpsolve55.dll" Alias "is_unbounded" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>is_use_names Lib "lpsolve55.dll" Alias "is_use_names" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal isrow <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>version Lib "lpsolve55.dll" Alias "lp_solve_version" </span>&#40;ByRef majorversion <span class='type'>As Integer</span>, ByRef minorversion <span class='type'>As Integer</span>, ByRef release <span class='type'>As Integer</span>, ByRef build <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>make_lp Lib "lpsolve55.dll" Alias "make_lp" </span>&#40;ByVal rows <span class='type'>As Integer</span>, ByVal columns <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>resize_lp Lib "lpsolve55.dll" Alias "resize_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal rows <span class='type'>As Integer</span>, ByVal columns <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>print_constraints Lib "lpsolve55.dll" Alias "print_constraints" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal columns <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>print_debugdump Lib "lpsolve55.dll" Alias "print_debugdump" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>print_duals Lib "lpsolve55.dll" Alias "print_duals" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>print_lp Lib "lpsolve55.dll" Alias "print_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>print_objective Lib "lpsolve55.dll" Alias "print_objective" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>print_scales Lib "lpsolve55.dll" Alias "print_scales" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>print_solution Lib "lpsolve55.dll" Alias "print_solution" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal columns <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>print_str Lib "lpsolve55.dll" Alias "print_str" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal str_Renamed <span class='type'>As String</span>)</span><br><br>Public Declare Sub <span class='method_name'>print_tableau Lib "lpsolve55.dll" Alias "print_tableau" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Delegate Function <span class='method_name'>abortfunc</span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal userhandle <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Sub <span class='method_name'>put_abortfunc Lib "lpsolve55.dll" Alias "put_abortfunc" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal newctrlc <span class='type'>As abortfunc</span>, ByVal ctrlchandle <span class='type'>As Integer</span>)</span><br><br>Public Delegate Sub <span class='method_name'>logfunc</span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal userhandle <span class='type'>As Integer</span>, ByVal buf <span class='type'>As String</span>)</span><br><br>Public Declare Sub <span class='method_name'>put_logfunc Lib "lpsolve55.dll" Alias "put_logfunc" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal newlog <span class='type'>As logfunc</span>, ByVal loghandle <span class='type'>As Integer</span>)</span><br><br>Public Delegate Sub <span class='method_name'>msgfunc</span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal userhandle <span class='type'>As Integer</span>, ByVal message <span class='type'>As lpsolve_msgmask</span>)</span><br><br>Public Declare Sub <span class='method_name'>put_msgfunc Lib "lpsolve55.dll" Alias "put_msgfunc" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal newmsg <span class='type'>As msgfunc</span>, ByVal msghandle <span class='type'>As Integer</span>, ByVal mask <span class='type'>As lpsolve_msgmask</span>)</span><br><br>Public Declare Function <span class='method_name'>read_basis Lib "lpsolve55.dll" Alias "read_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>, ByVal info <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>read_freeMPS Lib "lpsolve55.dll" Alias "read_freeMPS" </span>&#40;ByVal filename <span class='type'>As String</span>, ByVal options <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>read_LP Lib "lpsolve55.dll" Alias "read_LP" </span>&#40;ByVal filename <span class='type'>As String</span>, ByVal verbose <span class='type'>As Integer</span>, ByVal lp_name <span class='type'>As String</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>read_MPS Lib "lpsolve55.dll" Alias "read_MPS" </span>&#40;ByVal filename <span class='type'>As String</span>, ByVal options <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>read_XLI Lib "lpsolve55.dll" Alias "read_XLI" </span>&#40;ByVal xliname <span class='type'>As String</span>, ByVal modelname <span class='type'>As String</span>, ByVal dataname <span class='type'>As String</span>, ByVal options <span class='type'>As String</span>, ByVal verbose <span class='type'>As Integer</span>&#41; <span class='type'>As Integer</span><br><br>Public Declare Function <span class='method_name'>read_params Lib "lpsolve55.dll" Alias "read_params" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>, ByVal options <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>reset_basis Lib "lpsolve55.dll" Alias "reset_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>reset_params Lib "lpsolve55.dll" Alias "reset_params" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>set_add_rowmode Lib "lpsolve55.dll" Alias "set_add_rowmode" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal turnon <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_anti_degen Lib "lpsolve55.dll" Alias "set_anti_degen" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal anti_degen <span class='type'>As lpsolve_anti_degen</span>)</span><br><br>Public Declare Function <span class='method_name'>set_basis Lib "lpsolve55.dll" Alias "set_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal bascolumn<span class='inside_if'>(&#41; <span class='type'>As Integer</span>, ByVal nonbasic <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_basiscrash Lib "lpsolve55.dll" Alias "set_basiscrash" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal mode <span class='type'>As lpsolve_basiscrash</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_basisvar Lib "lpsolve55.dll" Alias "set_basisvar" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal basisPos <span class='type'>As Integer</span>, ByVal enteringCol <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_bb_depthlimit Lib "lpsolve55.dll" Alias "set_bb_depthlimit" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal bb_maxlevel <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_bb_floorfirst Lib "lpsolve55.dll" Alias "set_bb_floorfirst" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal bb_floorfirst <span class='type'>As lpsolve_branch</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_bb_rule Lib "lpsolve55.dll" Alias "set_bb_rule" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal bb_rule <span class='type'>As lpsolve_BBstrategies</span>)</span><br><br>Public Declare Function <span class='method_name'>set_BFP Lib "lpsolve55.dll" Alias "set_BFP" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_binary Lib "lpsolve55.dll" Alias "set_binary" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal must_be_bin <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_bounds Lib "lpsolve55.dll" Alias "set_bounds" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal lower <span class='type'>As Double</span>, ByVal upper <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_bounds_tighter Lib "lpsolve55.dll" Alias "set_bounds_tighter" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal tighten <span class='type'>As Boolean</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_break_at_first Lib "lpsolve55.dll" Alias "set_break_at_first" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal break_at_first <span class='type'>As Boolean</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_break_at_value Lib "lpsolve55.dll" Alias "set_break_at_value" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal break_at_value <span class='type'>As Double</span>)</span><br><br>Public Declare Function <span class='method_name'>set_col_name Lib "lpsolve55.dll" Alias "set_col_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal new_name <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_column Lib "lpsolve55.dll" Alias "set_column" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal col_no <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_columnex Lib "lpsolve55.dll" Alias "set_columnex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal col_no <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal column<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal rowno<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_constr_type Lib "lpsolve55.dll" Alias "set_constr_type" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal con_type <span class='type'>As lpsolve_constr_types</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_debug Lib "lpsolve55.dll" Alias "set_debug" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal debug_ <span class='type'>As Boolean</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_epsb Lib "lpsolve55.dll" Alias "set_epsb" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epsb <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_epsd Lib "lpsolve55.dll" Alias "set_epsd" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epsd <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_epsel Lib "lpsolve55.dll" Alias "set_epsel" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epsel <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_epsint Lib "lpsolve55.dll" Alias "set_epsint" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epsint <span class='type'>As Double</span>)</span><br><br>Public Declare Function <span class='method_name'>set_epslevel Lib "lpsolve55.dll" Alias "set_epslevel" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epslevel <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_epsperturb Lib "lpsolve55.dll" Alias "set_epsperturb" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epsperturb <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_epspivot Lib "lpsolve55.dll" Alias "set_epspivot" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal epspivot <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_improve Lib "lpsolve55.dll" Alias "set_improve" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal improve <span class='type'>As lpsolve_improves</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_infinite Lib "lpsolve55.dll" Alias "set_infinite" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal infinite <span class='type'>As Double</span>)</span><br><br>Public Declare Function <span class='method_name'>set_int Lib "lpsolve55.dll" Alias "set_int" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal must_be_int <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_lag_trace Lib "lpsolve55.dll" Alias "set_lag_trace" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal lag_trace <span class='type'>As Boolean</span>)</span><br><br>Public Declare Function <span class='method_name'>set_lowbo Lib "lpsolve55.dll" Alias "set_lowbo" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal value <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_lp_name Lib "lpsolve55.dll" Alias "set_lp_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal lpname <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_mat Lib "lpsolve55.dll" Alias "set_mat" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal value <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_maxim Lib "lpsolve55.dll" Alias "set_maxim" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_maxpivot Lib "lpsolve55.dll" Alias "set_maxpivot" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal max_num_inv <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_minim Lib "lpsolve55.dll" Alias "set_minim" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_mip_gap Lib "lpsolve55.dll" Alias "set_mip_gap" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal absolute <span class='type'>As Boolean</span>, ByVal mip_gap <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_negrange Lib "lpsolve55.dll" Alias "set_negrange" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal negrange <span class='type'>As Double</span>)</span><br><br>Public Declare Function <span class='method_name'>set_obj Lib "lpsolve55.dll" Alias "set_obj" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal value <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_obj_bound Lib "lpsolve55.dll" Alias "set_obj_bound" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal obj_bound <span class='type'>As Double</span>)</span><br><br>Public Declare Function <span class='method_name'>set_obj_fn Lib "lpsolve55.dll" Alias "set_obj_fn" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_obj_fnex Lib "lpsolve55.dll" Alias "set_obj_fnex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal colno<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_outputfile Lib "lpsolve55.dll" Alias "set_outputfile" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_pivoting Lib "lpsolve55.dll" Alias "set_pivoting" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal piv_rule <span class='type'>As lpsolve_piv_rules</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_preferdual Lib "lpsolve55.dll" Alias "set_preferdual" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal dodual <span class='type'>As Boolean</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_presolve Lib "lpsolve55.dll" Alias "set_presolve" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal do_presolve <span class='type'>As lpsolve_presolve</span>, ByVal maxloops <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_print_sol Lib "lpsolve55.dll" Alias "set_print_sol" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal print_sol <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>set_PseudoCosts Lib "lpsolve55.dll" Alias "set_PseudoCosts" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal clower<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal cupper<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal updatelimit<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_rh Lib "lpsolve55.dll" Alias "set_rh" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal value <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_rh_range Lib "lpsolve55.dll" Alias "set_rh_range" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal deltavalue <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_rh_vec Lib "lpsolve55.dll" Alias "set_rh_vec" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal rh<span class='inside_if'>(&#41; <span class='type'>As Double</span>)</span><br><br>Public Declare Function <span class='method_name'>set_row Lib "lpsolve55.dll" Alias "set_row" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_no <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_row_name Lib "lpsolve55.dll" Alias "set_row_name" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row <span class='type'>As Integer</span>, ByVal new_name <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_rowex Lib "lpsolve55.dll" Alias "set_rowex" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_no <span class='type'>As Integer</span>, ByVal count <span class='type'>As Integer</span>, ByVal row<span class='inside_if'>(&#41; <span class='type'>As Double</span>, ByVal colno<span class='inside_if'>(&#41; <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_scalelimit Lib "lpsolve55.dll" Alias "set_scalelimit" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal scalelimit <span class='type'>As Double</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_scaling Lib "lpsolve55.dll" Alias "set_scaling" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal scalemode <span class='type'>As lpsolve_scales</span>)</span><br><br>Public Declare Function <span class='method_name'>set_semicont Lib "lpsolve55.dll" Alias "set_semicont" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal must_be_sc <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_sense Lib "lpsolve55.dll" Alias "set_sense" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal maximize <span class='type'>As Boolean</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_simplextype Lib "lpsolve55.dll" Alias "set_simplextype" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal simplextype <span class='type'>As lpsolve_simplextypes</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_solutionlimit Lib "lpsolve55.dll" Alias "set_solutionlimit" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal limit <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_timeout Lib "lpsolve55.dll" Alias "set_timeout" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal sectimeout <span class='type'>As Integer</span>)</span><br><br>Public Declare Sub <span class='method_name'>set_trace Lib "lpsolve55.dll" Alias "set_trace" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal trace <span class='type'>As Boolean</span>)</span><br><br>Public Declare Function <span class='method_name'>set_unbounded Lib "lpsolve55.dll" Alias "set_unbounded" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_upbo Lib "lpsolve55.dll" Alias "set_upbo" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal value <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_use_names Lib "lpsolve55.dll" Alias "set_use_names" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal isrow <span class='type'>As Boolean</span>, ByVal use_names <span class='type'>As Boolean</span>)</span><br><br>Public Declare Function <span class='method_name'>set_var_branch Lib "lpsolve55.dll" Alias "set_var_branch" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal column <span class='type'>As Integer</span>, ByVal branch_mode <span class='type'>As lpsolve_branch</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>set_var_weights Lib "lpsolve55.dll" Alias "set_var_weights" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal weights<span class='inside_if'>(&#41; <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Sub <span class='method_name'>set_verbose Lib "lpsolve55.dll" Alias "set_verbose" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal verbose <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>set_XLI Lib "lpsolve55.dll" Alias "set_XLI" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>solve Lib "lpsolve55.dll" Alias "solve" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As lpsolve_return</span><br><br>Public Declare Function <span class='method_name'>str_add_column Lib "lpsolve55.dll" Alias "str_add_column" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal col_string <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>str_add_constraint Lib "lpsolve55.dll" Alias "str_add_constraint" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_string <span class='type'>As String</span>, ByVal constr_type <span class='type'>As lpsolve_constr_types</span>, ByVal rh <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>str_add_lag_con Lib "lpsolve55.dll" Alias "str_add_lag_con" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_string <span class='type'>As String</span>, ByVal con_type <span class='type'>As lpsolve_constr_types</span>, ByVal rhs <span class='type'>As Double</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>str_set_obj_fn Lib "lpsolve55.dll" Alias "str_set_obj_fn" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal row_string <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>str_set_rh_vec Lib "lpsolve55.dll" Alias "str_set_rh_vec" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal rh_string <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>time_elapsed Lib "lpsolve55.dll" Alias "time_elapsed" </span>&#40;ByVal lp <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br><br>Public Declare Sub <span class='method_name'>unscale Lib "lpsolve55.dll" Alias "unscale" </span>&#40;ByVal lp <span class='type'>As Integer</span>)</span><br><br>Public Declare Function <span class='method_name'>write_basis Lib "lpsolve55.dll" Alias "write_basis" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>write_freemps Lib "lpsolve55.dll" Alias "write_freemps" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>write_lp Lib "lpsolve55.dll" Alias "write_lp" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>write_mps Lib "lpsolve55.dll" Alias "write_mps" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>write_XLI Lib "lpsolve55.dll" Alias "write_XLI" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>, ByVal options <span class='type'>As String</span>, ByVal results <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br><br>Public Declare Function <span class='method_name'>write_params Lib "lpsolve55.dll" Alias "write_params" </span>&#40;ByVal lp <span class='type'>As Integer</span>, ByVal filename <span class='type'>As String</span>, ByVal options <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br> <span class='comment'>'</span> <span class='comment'>'</span>...... <span class='comment'>'</span>............. <span class='comment'>'</span>......... ................. ...................... ............. .... ...... <span class='comment'>'</span>....................... <span class='comment'>'</span>................ <span class='comment'>'</span>...... <span class='comment'>'</span>........ <br>Private Shared Function <span class='method_name'>SetEnvironmentVariable</span>&#40;ByRef name <span class='type'>As String</span>, ByRef value <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span><br> . <br>End Function<br> <br>Private Shared Function <span class='method_name'>GetEnvironmentVariable</span>&#40;ByRef name <span class='type'>As String</span>&#41; <span class='type'>As String</span><br>.. .<span class='inside_if'>(...|.)</span> <br>End Function<br> <br>Shared Function <span class='method_name'>Init</span>&#40;Optional ByVal dllPath <span class='type'>As String</span> = ""&#41; <span class='type'>As Boolean</span><br>... <span class='inside_if'>(.)</span>.<span class='inside_if'>(.)</span>.]</p>.<span class='inside_if'>(<span class='inside_if'>(..<span class='inside_if'>(.)</span>)</span>)</span> <br>End Function<br> .
</div></body></html>
