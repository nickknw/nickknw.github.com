<html><head><title>./dwsim/dwsim/DWSIM/Classes/Math/MatrixOps</title> 
	<style type="text/css">
	    body { font-family: georgia, serif; }
	    h1 { color: #111111 }
	    li { font-family: Consolas, monospace; font-size: 14px; margin-bottom:20px; list-style-type: none; word-wrap:break-word; }
	    .line_count { color: #000080; font-family: Consolas, monospace;}
	    .method_count { color: #008080; font-family: Consolas, monospace;}
	    .signature { font-size: 12px; }
	    .inside_method { background-color: #eeeeee; }
	    .detail_page { font-family: Consolas, monospace; font-size: 14px; word-wrap: break-word}
	    .method_name { background-color: #ccccee ; font-weight: bold; }
	    .type { background-color: aaffbb; font-weight: bold; }
	    .inside_if { background-color:#CCEECC; }
	    .inside_loop { background-color:#EECCCC; }
	    .inside_loop .inside_if { background-color:#BBBBAA; }
	    .inside_if .inside_loop { background-color:#CCAAAA; }
	    .comment { color: #777777; }
	    p { display: inline; margin: 0px; padding: 0px; }
	    div { display: inline; margin: 0px; padding: 0px; }
	    #legend { font-family: Consolas, monospace; font-size: 14px; margin-bottom:10px; }
	    #legend td { padding-right: 15px; }
	</style></head><body>
<h2>./dwsim/dwsim/DWSIM/Classes/Math/MatrixOps: <span class='method_count'>10m</span> <span class='line_count'>&nbsp;566L&nbsp;&nbsp;&nbsp;</span></h2><div class='detail_page'>

    <table id="legend">
	<tr><td style="padding-bottom:10px;"><span style="font-size:18px; font-family: georgia, serif; font-weight: bold;">Legend</span></td></tr>
	<tr><td><span class="method_count">14m</span> means 14 methods</td> <td><span class="line_count">294L</span> means 294 lines</td> </tr>
	<tr><td>a space is a blank line</td><td>. is a (non-blank) line</td> </tr>
	<tr><td><span class='inside_if'>?</span> is a single line If statement</td><td>' is a commented line</td></tr>
        <tr><td><span class='inside_if'>|</span> is an Else or Case statement</td><td><div class='inside_method'>{Inside a method}</div></td></tr>
	<tr><td><span class='inside_if'>(Inside an if block)</span></td><td><p class='inside_loop'>[Inside a loop]</p></td></tr>
	<tr><td><p class='inside_loop'><span class='inside_if'>[(An if block inside a loop)]</span></p></td><td> <span class='inside_if'><p class='inside_loop'>([A loop inside an if block])</p></span></td></tr>
    </table>
. <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> . <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <br>Public Shared Function <span class='method_name'>rmatrixdet</span>&#40;ByVal a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br>....<br>End Function<br> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <br>Public Shared Function <span class='method_name'>rmatrixludet</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br>......<p class='inside_loop'>[.<span class='inside_if'>(.)</span>...<br>End Function<br> <br>Public Shared Function <span class='method_name'>determinant</span>&#40;ByVal a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br>....<br>End Function<br> <br>Public Shared Function <span class='method_name'>determinantlu</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br>......<p class='inside_loop'>[.<span class='inside_if'>(.)</span>...<br>End Function<br> . . <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><br>Public Shared Function <span class='method_name'>rmatrixinverse</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br>...<br>End Function<br> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <br>Public Shared Function <span class='method_name'>rmatrixluinverse</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br>........<span class='inside_if'>(.<span class='inside_if'>(.)</span>.<p class='inside_loop'>[.<p class='inside_loop'>[....<span class='inside_if'>(.<p class='inside_loop'>[..<p class='inside_loop'>[......)</span>...<p class='inside_loop'>[.<span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[....<p class='inside_loop'>[...)</span>..)</span>.<br>End Function<br> <br>Public Shared Function <span class='method_name'>inverse</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br>...<br>End Function<br> <br>Public Shared Function <span class='method_name'>inverselu</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>&#41; <span class='type'>As Boolean</span><br>.........<span class='inside_if'>(.<span class='inside_if'>(.)</span>.<p class='inside_loop'>[.<p class='inside_loop'>[....<span class='inside_if'>(..<p class='inside_loop'>[..<p class='inside_loop'>[......)</span>...<p class='inside_loop'>[.<span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[....<p class='inside_loop'>[...)</span>..)</span>.<br>End Function<br> . . <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <br>Public Shared Function <span class='method_name'>rmatrixtrinverse</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal n <span class='type'>As Integer</span>, ByVal isupper <span class='type'>As Boolean</span>, ByVal isunittriangular <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br>...........<span class='inside_if'>(.<p class='inside_loop'>[<span class='inside_if'>(<span class='inside_if'>(.)</span>..|.)</span><span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[<span class='inside_if'>(..<p class='inside_loop'>[...|.)</span><span class='inside_if'>(.|.)</span>...<p class='inside_loop'>[...)</span>...)</span>.<p class='inside_loop'>[<span class='inside_if'>(<span class='inside_if'>(.)</span>..|.)</span><span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[<span class='inside_if'>(..<p class='inside_loop'>[...|.)</span><span class='inside_if'>(.|.)</span>...<p class='inside_loop'>[...)</span>...<br>End Function<br> <br>Public Shared Function <span class='method_name'>invtriangular</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal n <span class='type'>As Integer</span>, ByVal isupper <span class='type'>As Boolean</span>, ByVal isunittriangular <span class='type'>As Boolean</span>&#41; <span class='type'>As Boolean</span><br>.............<span class='inside_if'>(.<p class='inside_loop'>[<span class='inside_if'>(<span class='inside_if'>(.)</span>..|.)</span><span class='inside_if'>(..<p class='inside_loop'>[....<p class='inside_loop'>[<span class='inside_if'>(..<p class='inside_loop'>[...|.)</span><span class='inside_if'>(.|.)</span>...<p class='inside_loop'>[...)</span>...)</span>.<p class='inside_loop'>[<span class='inside_if'>(<span class='inside_if'>(.)</span>..|.)</span><span class='inside_if'>(..<p class='inside_loop'>[....<p class='inside_loop'>[<span class='inside_if'>(..<p class='inside_loop'>[...|.)</span><span class='inside_if'>(.|.)</span>...<p class='inside_loop'>[...)</span>...<br>End Function<br> . .
</div></body></html>
