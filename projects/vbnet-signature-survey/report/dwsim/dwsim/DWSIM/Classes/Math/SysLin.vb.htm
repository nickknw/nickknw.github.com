<html><head><title>./dwsim/dwsim/DWSIM/Classes/Math/SysLin</title> 
	<style type="text/css">
	    body { font-family: georgia, serif; }
	    h1 { color: #111111 }
	    li { font-family: Consolas, monospace; font-size: 14px; margin-bottom:20px; list-style-type: none; word-wrap:break-word; }
	    .line_count { color: #000080; font-family: Consolas, monospace;}
	    .method_count { color: #008080; font-family: Consolas, monospace;}
	    .signature { font-size: 12px; }
	    .inside_method { background-color: #eeeeee; }
	    .detail_page { font-family: Consolas, monospace; font-size: 14px; word-wrap: break-word}
	    .method_name { background-color: #ccccee ; font-weight: bold; }
	    .type { background-color: aaffbb; font-weight: bold; }
	    .inside_if { background-color:#CCEECC; }
	    .inside_loop { background-color:#EECCCC; }
	    .inside_loop .inside_if { background-color:#BBBBAA; }
	    .inside_if .inside_loop { background-color:#CCAAAA; }
	    .comment { color: #777777; }
	    p { display: inline; margin: 0px; padding: 0px; }
	    div { display: inline; margin: 0px; padding: 0px; }
	    #legend { font-family: Consolas, monospace; font-size: 14px; margin-bottom:10px; }
	    #legend td { padding-right: 15px; }
	</style></head><body>
<h2>./dwsim/dwsim/DWSIM/Classes/Math/SysLin: <span class='method_count'>65m</span> <span class='line_count'>&nbsp;1784L&nbsp;&nbsp;</span></h2><div class='detail_page'>

    <table id="legend">
	<tr><td style="padding-bottom:10px;"><span style="font-size:18px; font-family: georgia, serif; font-weight: bold;">Legend</span></td></tr>
	<tr><td><span class="method_count">14m</span> means 14 methods</td> <td><span class="line_count">294L</span> means 294 lines</td> </tr>
	<tr><td>a space is a blank line</td><td>. is a (non-blank) line</td> </tr>
	<tr><td><span class='inside_if'>?</span> is a single line If statement</td><td>' is a commented line</td></tr>
        <tr><td><span class='inside_if'>|</span> is an Else or Case statement</td><td><div class='inside_method'>{Inside a method}</div></td></tr>
	<tr><td><span class='inside_if'>(Inside an if block)</span></td><td><p class='inside_loop'>[Inside a loop]</p></td></tr>
	<tr><td><p class='inside_loop'><span class='inside_if'>[(An if block inside a loop)]</span></p></td><td> <span class='inside_if'><p class='inside_loop'>([A loop inside an if block])</p></span></td></tr>
    </table>
. . <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <br>Public Shared Function <span class='method_name'>rmatrixlusolve</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>, ByVal b <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>, ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>&#41; <span class='type'>As Boolean</span><br>..........<p class='inside_loop'>[<span class='inside_if'>(.)</span>...<p class='inside_loop'>[<span class='inside_if'>(...)</span>....<p class='inside_loop'>[..<p class='inside_loop'>[........<p class='inside_loop'>[..<p class='inside_loop'>[.......<br>End Function<br> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <br>Public Shared Function <span class='method_name'>rmatrixsolve</span>&#40;ByVal a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal b <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>, ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>&#41; <span class='type'>As Boolean</span><br>.....<br>End Function<br> <br>Public Shared Function <span class='method_name'>solvesystem</span>&#40;ByVal a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal b <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>, ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>&#41; <span class='type'>As Boolean</span><br>.....<br>End Function<br> <br>Public Shared Function <span class='method_name'>solvesystemlu</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>, ByVal b <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal n <span class='type'>As Integer</span>, ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>&#41; <span class='type'>As Boolean</span><br>............<p class='inside_loop'>[<span class='inside_if'>(.)</span>...<p class='inside_loop'>[<span class='inside_if'>(...)</span>....<p class='inside_loop'>[...<p class='inside_loop'>[........<p class='inside_loop'>[...<p class='inside_loop'>[.......<br>End Function<br>&nbsp;&nbsp;. . <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> <br>Public Shared Sub <span class='method_name'>ludecomposition</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal m <span class='type'>As Integer</span>, ByVal n <span class='type'>As Integer</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>)</span><br>........<span class='inside_if'>(.<p class='inside_loop'>[..<p class='inside_loop'>[<span class='inside_if'>(.)</span>...<span class='inside_if'>(<span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[....<p class='inside_loop'>[...)</span><span class='inside_if'>(...<p class='inside_loop'>[...)</span>)</span><span class='inside_if'>(..<p class='inside_loop'>[..<p class='inside_loop'>[.....)</span>..)</span><br>End Sub<br> <br>Public Shared Sub <span class='method_name'>ludecompositionunpacked</span>&#40;ByVal a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal m <span class='type'>As Integer</span>, ByVal n <span class='type'>As Integer</span>, ByRef l <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef u <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>)</span><br>....<span class='inside_if'>(.....<p class='inside_loop'>[.<p class='inside_loop'>[<span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span>.....<p class='inside_loop'>[.<p class='inside_loop'>[<span class='inside_if'>(.)</span><span class='inside_if'>(.)</span>....)</span><br>End Sub<br> <br>Public Shared Sub <span class='method_name'>rmatrixlu</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal m <span class='type'>As Integer</span>, ByVal n <span class='type'>As Integer</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>)</span><br>...............<span class='inside_if'>(.|......<p class='inside_loop'>[..<p class='inside_loop'>[..<p class='inside_loop'>[.......<p class='inside_loop'>[..<p class='inside_loop'>[......<p class='inside_loop'>[..<span class='inside_if'>(<span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[....<p class='inside_loop'>[...)</span><span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[....<p class='inside_loop'>[...)</span>)</span>..<span class='inside_if'>(.<p class='inside_loop'>[.<p class='inside_loop'>[..<p class='inside_loop'>[.......)</span><span class='inside_if'>(.<p class='inside_loop'>[.<p class='inside_loop'>[..<p class='inside_loop'>[.......)</span>...)</span><br>End Sub<br> <br>Private Shared Sub <span class='method_name'>rmatrixlu2</span>&#40;ByRef a <span class='type'>As Double</span><span class='inside_if'>(,)</span>, ByVal m <span class='type'>As Integer</span>, ByVal n <span class='type'>As Integer</span>, ByRef pivots <span class='type'>As Integer</span><span class='inside_if'>()</span>)</span><br>........<span class='inside_if'>(.<p class='inside_loop'>[..<p class='inside_loop'>[<span class='inside_if'>(.)</span>...<span class='inside_if'>(<span class='inside_if'>(.<p class='inside_loop'>[....<p class='inside_loop'>[....<p class='inside_loop'>[...)</span><span class='inside_if'>(...<p class='inside_loop'>[...)</span>)</span><span class='inside_if'>(..<p class='inside_loop'>[..<p class='inside_loop'>[.....)</span>..)</span><br>End Sub<br> <span class='comment'>'</span>. . . <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span> ..... <span class='comment'>'</span>... <span class='comment'>'</span><br>Private Shared Sub <span class='method_name'>Swap</span>&#40;ByRef sA <span class='type'>As Single</span>, ByRef sB <span class='type'>As Single</span>)</span><br>....<br>End Sub<br> <span class='comment'>'</span><br>Delegate Function <span class='method_name'>SolveNonLinearError</span>&#40;ByVal sX<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br> <br>Public Shared Function <span class='method_name'>SolveNonLinear</span>&#40;ByVal sX<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>..... . .......<span class='comment'>'</span>.<span class='inside_if'>(..|..)</span> <p class='inside_loop'>[<span class='inside_if'>?</span><span class='inside_if'>(..|.)</span>]</p> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>..<span class='inside_if'>(.)</span> <span class='comment'>'</span><span class='inside_if'>(.<p class='inside_loop'>[.]</p> .... .)</span> <span class='inside_if'>(<span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><br>Exit Function<br>)</span>. . <span class='inside_if'>(.|..<span class='inside_if'>(<p class='inside_loop'>[<span class='inside_if'>(<p class='inside_loop'>[..]</p>.)</span>]</p>..|.)</span>)</span><p class='inside_loop'>[.<br>End Function<br> <br>Private Shared Function <span class='method_name'>SolveNonLinearAdjustSimplex</span>&#40;ByVal sX<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>........ <span class='comment'>'</span>..<p class='inside_loop'>[.]</p>.<span class='comment'>'</span> <span class='inside_if'>(.<p class='inside_loop'>[..]</p><span class='comment'>'</span>|<span class='comment'>'</span>)</span>.<br>End Function<br> <br>Public Shared Sub <span class='method_name'>SolveNonLinearTest</span>&#40;ByVal iNrDims <span class='type'>As Integer</span>)</span><br> .... .....<p class='inside_loop'>[<p class='inside_loop'>[<span class='inside_if'>(.|.)</span>]</p> <span class='comment'>'</span>.. ]</p> <span class='comment'>'</span>.<br>End Sub<br> <br>Public Shared Function <span class='method_name'>SolveNonLinearTestError</span>&#40;ByVal sCoef<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>.. <p class='inside_loop'>[<span class='inside_if'>(.|.)</span>]</p>.<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Solve</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sX<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sY<span class='inside_if'>(,&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Boolean</span><br><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>.. <span class='inside_if'>(..)</span> . <span class='comment'>'</span>....<p class='inside_loop'>[...]</p><br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Solve</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sX<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sY<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Boolean</span><br><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>.. .... <span class='inside_if'>(<span class='comment'>'</span>.)</span> . <span class='comment'>'</span>..<br>End Function<br> <br>Private Shared Sub <span class='method_name'>SVDRemoveSingularValues</span>&#40;ByVal sW<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sThresholdFactor <span class='type'>As Single</span>)</span><br><span class='comment'>'</span><span class='comment'>'</span>.. <p class='inside_loop'>[<span class='inside_if'>?</span>]</p>.<p class='inside_loop'>[<span class='inside_if'>?</span>]</p><br>End Sub<br> <br>Private Shared Sub <span class='method_name'>SVDInvert</span>&#40;ByVal sU<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>....<span class='comment'>'</span>.. .. .<p class='inside_loop'>[.<span class='inside_if'>(<p class='inside_loop'>[.]</p>.)</span> .]</p> <p class='inside_loop'>[.<p class='inside_loop'>[.]</p>.]</p><br>End Sub<br> <br>Private Shared Function <span class='method_name'>SVDDecomposition</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>.... <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>......<span class='comment'>'</span>. .. <span class='inside_if'>(..)</span> .... <span class='comment'>'</span>. <span class='comment'>'</span>.<p class='inside_loop'>[.....<span class='inside_if'>(<p class='inside_loop'>[.]</p> <span class='inside_if'>(<p class='inside_loop'>[..]</p> .<span class='inside_if'>(.|.)</span> ..<span class='inside_if'>(<p class='inside_loop'>[.<p class='inside_loop'>[.]</p>.<p class='inside_loop'>[.]</p>]</p>)</span> <p class='inside_loop'>[.]</p> )</span>)</span> ....<span class='inside_if'>(<p class='inside_loop'>[.]</p> <span class='inside_if'>(<p class='inside_loop'>[..]</p> .<span class='inside_if'>(.|.)</span>.. <p class='inside_loop'>[.]</p> <span class='inside_if'>(<p class='inside_loop'>[.<p class='inside_loop'>[.]</p> <p class='inside_loop'>[.]</p>]</p>)</span> <p class='inside_loop'>[.]</p> )</span>)</span> .<span class='inside_if'>?</span>]</p><span class='comment'>'</span> <span class='comment'>'</span><p class='inside_loop'>[<span class='inside_if'>(<span class='inside_if'>(<p class='inside_loop'>[.]</p> <p class='inside_loop'>[.<p class='inside_loop'>[.]</p> <p class='inside_loop'>[.]</p>]</p>)</span> <p class='inside_loop'>[..]</p> )</span> ...]</p> <span class='comment'>'</span><p class='inside_loop'>[..<span class='inside_if'>(<p class='inside_loop'>[.]</p>)</span> <span class='inside_if'>(.<span class='inside_if'>(<p class='inside_loop'>[.<p class='inside_loop'>[.]</p> .<p class='inside_loop'>[.]</p>]</p>)</span> <p class='inside_loop'>[.]</p>|<p class='inside_loop'>[.]</p>)</span> .]</p> <span class='comment'>'</span><p class='inside_loop'>[<p class='inside_loop'>[<span class='comment'>'</span>.<p class='inside_loop'>[.<span class='inside_if'>(..)</span> <span class='inside_if'>(.)</span>]</p> <span class='inside_if'>(..<p class='inside_loop'>[.<span class='inside_if'>(......<p class='inside_loop'>[....]</p>)</span>]</p>)</span>. <span class='comment'>'</span><span class='inside_if'>(<span class='inside_if'>(.<p class='inside_loop'>[.]</p>)</span>.)</span> <span class='inside_if'>(..)</span> .......<span class='inside_if'>(.|.)</span> ..<p class='inside_loop'>[.............<p class='inside_loop'>[....]</p>..<span class='inside_if'>(...)</span>..<p class='inside_loop'>[....]</p>]</p>...]</p>]</p>.<br>End Function<br> <br>Private Shared Function <span class='method_name'>Pythagoras</span>&#40;ByVal a <span class='type'>As Single</span>, ByVal b <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br>. ..<span class='inside_if'>(..|<span class='inside_if'>(<span class='comment'>'</span>.|..)</span>)</span><br>End Function<br> <br>Public Overloads Shared Sub <span class='method_name'>Add</span>&#40;ByVal sV1<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sV2<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sR<span class='inside_if'>(&#41; <span class='type'>As Single</span>)</span><br>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Add</span>&#40;ByVal sM1<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sM2<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sMR<span class='inside_if'>(,&#41; <span class='type'>As Single</span>)</span><br>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Subtract</span>&#40;ByVal sV1<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sV2<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sR<span class='inside_if'>(&#41; <span class='type'>As Single</span>)</span><br>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Subtract</span>&#40;ByVal sM1<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sM2<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sMR<span class='inside_if'>(,&#41; <span class='type'>As Single</span>)</span><br>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Function <span class='method_name'>Norm</span>&#40;ByVal sV1<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br>.<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Norm</span>&#40;ByVal sV1<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal iOrder <span class='type'>As NormOrder</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>..<span class='inside_if'>(|<p class='inside_loop'>[.]</p>|<p class='inside_loop'>[.]</p>.|.<p class='inside_loop'>[.<span class='inside_if'>?</span>]</p>)</span>.<br>End Function<br> <br>Public Overloads Shared Sub <span class='method_name'>Mean</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>)</span><br><span class='comment'>'</span>...<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Function <span class='method_name'>Mean</span>&#40;ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>....<br>End Function<br>&nbsp;&nbsp;<br>Public Overloads Shared Sub <span class='method_name'>Sum</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>)</span><br><span class='comment'>'</span>.. <p class='inside_loop'>[.<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Function <span class='method_name'>Sum</span>&#40;ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>... <p class='inside_loop'>[.]</p>.<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Max</span>&#40;ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByRef iPos <span class='type'>As Integer</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>... <p class='inside_loop'>[<span class='inside_if'>(..)</span>]</p>.<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Max</span>&#40;ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br>..<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Max</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>..<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Max</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByRef iCol <span class='type'>As Integer</span>, ByRef iRow <span class='type'>As Integer</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>...<p class='inside_loop'>[<p class='inside_loop'>[<span class='inside_if'>(...)</span>]</p>]</p>.<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>Scale</span>&#40;ByVal sX <span class='type'>As Single</span>, ByVal sOffset <span class='type'>As Single</span>, ByVal sScale <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span><span class='comment'>'</span>.<br>End Function<br> <br>Public Overloads Shared Sub <span class='method_name'>Scale</span>&#40;ByVal sScale <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Scale</span>&#40;ByVal sV1<span class='inside_if'>(&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Scale</span>&#40;ByVal sScale <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Scale</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Scale</span>&#40;ByVal sRowScales<span class='inside_if'>(&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Scale</span>&#40;ByVal sB<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Product</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span><span class='comment'>'</span>...... <span class='inside_if'>?</span>...)</span> <p class='inside_loop'>[<p class='inside_loop'>[.<p class='inside_loop'>[.]</p>]</p>]</p><br>End Sub<br> <br>Public Overloads Shared Function <span class='method_name'>Product</span>&#40;ByVal sV1<span class='inside_if'>(&#41; <span class='type'>As Single</span>, ByVal sV2<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Single</span><br><span class='comment'>'</span>. .<p class='inside_loop'>[.]</p>.<br>End Function<br> <br>Public Overloads Shared Sub <span class='method_name'>Product</span>&#40;ByVal sM<span class='inside_if'>(&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span><span class='comment'>'</span>. ...<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Product</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>. ...<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Product</span>&#40;ByVal sX<span class='inside_if'>(&#41; <span class='type'>As Single</span>, _<br>..<span class='comment'>'</span>.. ...<br>End Sub<br> <br>Public Shared Sub <span class='method_name'>SubMatrix</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>..<p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br><br>Public Overloads Shared Sub <span class='method_name'>GetMatrixColumn</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>GetMatrixColumn</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<span class='comment'>'</span>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>GetMatrixRow</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>GetMatrixRow</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<span class='comment'>'</span>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>SetMatrixColumn</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<span class='comment'>'</span>..<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>SetMatrixColumn</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>SetMatrixRow</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>...<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>SetMatrixRow</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>.....<p class='inside_loop'>[.]</p><br>End Sub<br> <br>Public Shared Sub <span class='method_name'>MatrixToVector</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>.<span class='comment'>'</span>. ..<p class='inside_loop'>[<p class='inside_loop'>[..]</p>]</p><br>End Sub<br> <br>Public Shared Sub <span class='method_name'>VectorToMatrix</span>&#40;ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>, _<br>.<span class='comment'>'</span>. ..<p class='inside_loop'>[<p class='inside_loop'>[..]</p>]</p><br>End Sub<br> <br>Public Shared Sub <span class='method_name'>Transpose</span>&#40;ByVal sA<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, ByVal sAt<span class='inside_if'>(,&#41; <span class='type'>As Single</span>)</span><br><span class='comment'>'</span><span class='comment'>'</span>.. <p class='inside_loop'>[<p class='inside_loop'>[.]</p>]</p><br>End Sub<br> <br>Public Shared Function <span class='method_name'>Load</span>&#40;ByVal strFile <span class='type'>As String</span>, ByRef sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>&#41; <span class='type'>As Boolean</span><br><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span>... ...... ..<p class='inside_loop'>[<span class='comment'>'</span>. <span class='inside_if'>(... <span class='comment'>'</span><span class='comment'>'</span><span class='inside_if'>(..|.)</span> <span class='comment'>'</span><p class='inside_loop'>[<span class='comment'>'</span>.]</p>.)</span>. <span class='comment'>'</span>. <span class='comment'>'</span>...<br>End Function<br> <br>Public Overloads Shared Sub <span class='method_name'>Save</span>&#40;ByVal strFile <span class='type'>As String</span>, _<br>..<br>End Sub<br> <br>Public Overloads Shared Sub <span class='method_name'>Save</span>&#40;ByVal strFile <span class='type'>As String</span>, _<br>...<span class='comment'>'</span>.. <span class='inside_if'>(.|<p class='inside_loop'>[.]</p>.)</span> <p class='inside_loop'>[.]</p> <span class='inside_if'>?</span> ...<p class='inside_loop'>[<p class='inside_loop'>[.]</p>.]</p>....<br>End Sub<br> <br>Private Shared Sub <span class='method_name'>GetBounds</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>, _<br>....<br>End Sub<br> <br>Public Overloads Shared Function <span class='method_name'>ToString</span>&#40;ByVal sM<span class='inside_if'>(,&#41; <span class='type'>As Single</span>&#41; <span class='type'>As String</span><br>...<p class='inside_loop'>[<p class='inside_loop'>[.]</p>.]</p>.<br>End Function<br> <br>Public Overloads Shared Function <span class='method_name'>ToString</span>&#40;ByVal sV<span class='inside_if'>(&#41; <span class='type'>As Single</span>&#41; <span class='type'>As String</span><br>...<p class='inside_loop'>[.]</p>..<br>End Function<br>.&nbsp;&nbsp;.&nbsp;&nbsp; 
</div></body></html>
