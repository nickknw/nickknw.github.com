<html><head><title>./dwsim/dwsim/DWSIM/Classes/Math/LBFGS</title> 
	<style type="text/css">
	    body { font-family: georgia, serif; }
	    h1 { color: #111111 }
	    li { font-family: Consolas, monospace; font-size: 14px; margin-bottom:20px; list-style-type: none; word-wrap:break-word; }
	    .line_count { color: #000080; font-family: Consolas, monospace;}
	    .method_count { color: #008080; font-family: Consolas, monospace;}
	    .signature { font-size: 12px; }
	    .inside_method { background-color: #eeeeee; }
	    .detail_page { font-family: Consolas, monospace; font-size: 14px; word-wrap: break-word}
	    .method_name { background-color: #ccccee ; font-weight: bold; }
	    .type { background-color: aaffbb; font-weight: bold; }
	    .inside_if { background-color:#CCEECC; }
	    .inside_loop { background-color:#EECCCC; }
	    .inside_loop .inside_if { background-color:#BBBBAA; }
	    .inside_if .inside_loop { background-color:#CCAAAA; }
	    .comment { color: #777777; }
	    p { display: inline; margin: 0px; padding: 0px; }
	    div { display: inline; margin: 0px; padding: 0px; }
	    #legend { font-family: Consolas, monospace; font-size: 14px; margin-bottom:10px; }
	    #legend td { padding-right: 15px; }
	</style></head><body>
<h2>./dwsim/dwsim/DWSIM/Classes/Math/LBFGS: <span class='method_count'>12m</span> <span class='line_count'>&nbsp;635L&nbsp;&nbsp;&nbsp;</span></h2><div class='detail_page'>

    <table id="legend">
	<tr><td style="padding-bottom:10px;"><span style="font-size:18px; font-family: georgia, serif; font-weight: bold;">Legend</span></td></tr>
	<tr><td><span class="method_count">14m</span> means 14 methods</td> <td><span class="line_count">294L</span> means 294 lines</td> </tr>
	<tr><td>a space is a blank line</td><td>. is a (non-blank) line</td> </tr>
	<tr><td><span class='inside_if'>?</span> is a single line If statement</td><td>' is a commented line</td></tr>
        <tr><td><span class='inside_if'>|</span> is an Else or Case statement</td><td><div class='inside_method'>{Inside a method}</div></td></tr>
	<tr><td><span class='inside_if'>(Inside an if block)</span></td><td><p class='inside_loop'>[Inside a loop]</p></td></tr>
	<tr><td><p class='inside_loop'><span class='inside_if'>[(An if block inside a loop)]</span></p></td><td> <span class='inside_if'><p class='inside_loop'>([A loop inside an if block])</p></span></td></tr>
    </table>
. . <br>Delegate Sub <span class='method_name'>funcgraddelegate</span>&#40;ByVal x <span class='type'>As Double</span><span class='inside_if'>()</span>, ByRef f <span class='type'>As Double</span>, ByRef g <span class='type'>As Double</span><span class='inside_if'>()</span>)</span><br><br>Delegate Sub <span class='method_name'>newiterdelegate</span>&#40;ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal f <span class='type'>As Double</span>, ByRef g <span class='type'>As Double</span><span class='inside_if'>()</span>, ByRef abort <span class='type'>As Boolean</span>)</span><br>.. <br>Sub <span class='method_name'>New</span>&#40;)</span><br> <br>End Sub<br> <br>Sub <span class='method_name'>DefineFuncGradDelegate</span>&#40;ByVal fg <span class='type'>As funcgraddelegate</span>)</span><br>.<br>End Sub<br> <br>Sub <span class='method_name'>funcgrad</span>&#40;ByVal x <span class='type'>As Double</span><span class='inside_if'>()</span>, ByRef f <span class='type'>As Double</span>, ByRef g <span class='type'>As Double</span><span class='inside_if'>()</span>)</span><br>.<br>End Sub<br> <br>Sub <span class='method_name'>DefineNewIterDelegate</span>&#40;ByVal fg <span class='type'>As newiterdelegate</span>)</span><br>.<br>End Sub<br> <br>Private Sub <span class='method_name'>lbfgsnewiteration</span>&#40;ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal f <span class='type'>As Double</span>, ByRef g <span class='type'>As Double</span><span class='inside_if'>()</span>, ByRef abort <span class='type'>As Boolean</span>)</span><br>.<br>End Sub<br> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span><span class='comment'>'</span> <br>Private Function <span class='method_name'>lbfgsdotproduct</span>&#40;ByVal n <span class='type'>As Integer</span>, ByRef dx <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal sx <span class='type'>As Integer</span>, ByRef dy <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal sy <span class='type'>As Integer</span>&#41; <span class='type'>As Double</span><br>........<p class='inside_loop'>[....<br>End Function<br> <br>Private Sub <span class='method_name'>lbfgslincomb</span>&#40;ByVal n <span class='type'>As Integer</span>, ByVal da <span class='type'>As Double</span>, ByRef dx <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal sx <span class='type'>As Integer</span>, ByRef dy <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal sy <span class='type'>As Integer</span>)</span><br>......<p class='inside_loop'>[...<br>End Sub<br> <br>Private Sub <span class='method_name'>lbfgsmcsrch</span>&#40;ByVal n <span class='type'>As Integer</span>, ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>, ByRef f <span class='type'>As Double</span>, ByRef g <span class='type'>As Double</span><span class='inside_if'>()</span>, ByRef s <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal sstart <span class='type'>As Integer</span>, ByRef stp <span class='type'>As Double</span>, ByVal ftol <span class='type'>As Double</span>, ByVal xtol <span class='type'>As Double</span>, ByVal maxfev <span class='type'>As Integer</span>, ByRef info <span class='type'>As Integer</span>, ByRef nfev <span class='type'>As Integer</span>, ByRef wa <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal gtol <span class='type'>As Double</span>, ByVal stpmin <span class='type'>As Double</span>, ByVal stpmax <span class='type'>As Double</span>)</span><br>......................................<span class='inside_if'>(.)</span>..<p class='inside_loop'>[...<span class='inside_if'>(.)</span>........<p class='inside_loop'>[.........<p class='inside_loop'>[<span class='inside_if'>(<span class='inside_if'>(..|..)</span>|..)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span>.<p class='inside_loop'>[........<p class='inside_loop'>[....<span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(.)</span>.<span class='inside_if'>(.)</span><span class='inside_if'>(.)</span><span class='inside_if'>(...........|.)</span><span class='inside_if'>(<span class='inside_if'>(.)</span>..)</span>.<br>End Sub<br> <br>Private Sub <span class='method_name'>lbfgsmcstep</span>&#40;ByRef stx <span class='type'>As Double</span>, ByRef fx <span class='type'>As Double</span>, ByRef dx <span class='type'>As Double</span>, ByRef sty <span class='type'>As Double</span>, ByRef fy <span class='type'>As Double</span>, ByRef dy <span class='type'>As Double</span>, ByRef stp <span class='type'>As Double</span>, ByVal fp <span class='type'>As Double</span>, ByVal dp <span class='type'>As Double</span>, ByRef brackt <span class='type'>As Boolean</span>, ByVal stmin <span class='type'>As Double</span>, ByVal stmax <span class='type'>As Double</span>, ByRef info <span class='type'>As Integer</span>)</span><br>............<span class='inside_if'>(.<span class='inside_if'>(.....<span class='inside_if'>(.)</span>.....<span class='inside_if'>(.|.)</span>.|.....<span class='inside_if'>(.)</span>.....<span class='inside_if'>(.|.)</span>.|.....<span class='inside_if'>(.)</span>...<span class='inside_if'>(.|.|.)</span>.<span class='inside_if'>(<span class='inside_if'>(.|.)</span>|.|.)</span>|..<span class='inside_if'>(...<span class='inside_if'>(.)</span>.....|.|.)</span>)</span><span class='inside_if'>(...|<span class='inside_if'>(...)</span>...)</span>...<span class='inside_if'>(<span class='inside_if'>(.|.)</span>)</span>)</span><br>End Sub<br> <br>Public Sub <span class='method_name'>lbfgsminimize</span>&#40;ByVal n <span class='type'>As Integer</span>, ByVal m <span class='type'>As Integer</span>, ByRef x <span class='type'>As Double</span><span class='inside_if'>()</span>, ByVal epsg <span class='type'>As Double</span>, ByVal epsf <span class='type'>As Double</span>, ByVal epsx <span class='type'>As Double</span>, ByVal maxits <span class='type'>As Integer</span>, ByRef info <span class='type'>As Integer</span>)</span><br>...............................................<span class='inside_if'>(..)</span>...<p class='inside_loop'>[..........<p class='inside_loop'>[.........<p class='inside_loop'>[......<span class='inside_if'>(<span class='inside_if'>(.)</span>...<p class='inside_loop'>[....<span class='inside_if'>(.)</span>..<p class='inside_loop'>[.....<p class='inside_loop'>[.<span class='inside_if'>(.)</span>........<p class='inside_loop'>[....<p class='inside_loop'>[.......<span class='inside_if'>(.)</span>...<p class='inside_loop'>[...)</span>..<span class='inside_if'>(.)</span>.<p class='inside_loop'>[....<span class='inside_if'>(.|...<p class='inside_loop'>[.....<span class='inside_if'>(.)</span><span class='inside_if'>(.|..<span class='inside_if'>(.|.<span class='inside_if'>(.|.<p class='inside_loop'>[....<p class='inside_loop'>[....<span class='inside_if'>(.|..<p class='inside_loop'>[....)</span>)</span>)</span>)</span>)</span><br>End Sub<br>&nbsp;&nbsp;. .
</div></body></html>
