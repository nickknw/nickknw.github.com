<html><head><title>./dwsim/dwsim/DWSIM/COInterfaces/CAPEOPEN</title> 
	<style type="text/css">
	    body { font-family: georgia, serif; }
	    h1 { color: #111111 }
	    li { font-family: Consolas, monospace; font-size: 14px; margin-bottom:20px; list-style-type: none; word-wrap:break-word; }
	    .line_count { color: #000080; font-family: Consolas, monospace;}
	    .method_count { color: #008080; font-family: Consolas, monospace;}
	    .signature { font-size: 12px; }
	    .inside_method { background-color: #eeeeee; }
	    .detail_page { font-family: Consolas, monospace; font-size: 14px; word-wrap: break-word}
	    .method_name { background-color: #ccccee ; font-weight: bold; }
	    .type { background-color: aaffbb; font-weight: bold; }
	    .inside_if { background-color:#CCEECC; }
	    .inside_loop { background-color:#EECCCC; }
	    .inside_loop .inside_if { background-color:#BBBBAA; }
	    .inside_if .inside_loop { background-color:#CCAAAA; }
	    .comment { color: #777777; }
	    p { display: inline; margin: 0px; padding: 0px; }
	    div { display: inline; margin: 0px; padding: 0px; }
	    #legend { font-family: Consolas, monospace; font-size: 14px; margin-bottom:10px; }
	    #legend td { padding-right: 15px; }
	</style></head><body>
<h2>./dwsim/dwsim/DWSIM/COInterfaces/CAPEOPEN: <span class='method_count'>80m</span> <span class='line_count'>&nbsp;1426L&nbsp;&nbsp;</span></h2><div class='detail_page'>

    <table id="legend">
	<tr><td style="padding-bottom:10px;"><span style="font-size:18px; font-family: georgia, serif; font-weight: bold;">Legend</span></td></tr>
	<tr><td><span class="method_count">14m</span> means 14 methods</td> <td><span class="line_count">294L</span> means 294 lines</td> </tr>
	<tr><td>a space is a blank line</td><td>. is a (non-blank) line</td> </tr>
	<tr><td><span class='inside_if'>?</span> is a single line If statement</td><td>' is a commented line</td></tr>
        <tr><td><span class='inside_if'>|</span> is an Else or Case statement</td><td><div class='inside_method'>{Inside a method}</div></td></tr>
	<tr><td><span class='inside_if'>(Inside an if block)</span></td><td><p class='inside_loop'>[Inside a loop]</p></td></tr>
	<tr><td><p class='inside_loop'><span class='inside_if'>[(An if block inside a loop)]</span></p></td><td> <span class='inside_if'><p class='inside_loop'>([A loop inside an if block])</p></span></td></tr>
    </table>
. . <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Identification Classes"<br> <span class='inside_if'>?</span> <span class='inside_if'>?</span> .. <span class='inside_if'>?</span>....... <span class='inside_if'>?</span>....... . <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Exception Classes"<br> . . . ...... . . .&nbsp;&nbsp;. . . . .. <br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameter <span class='type'>As Object</span>, ByVal parametername <span class='type'>As String</span>)</span><br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ...... . . . . <br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal position <span class='type'>As Short</span>)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ...... . . . . . . . . . . . . . . . . <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Parameter Classes"<br> . <span class='inside_if'>?</span> ... ...<span class='inside_if'>?</span> <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal value <span class='type'>As Nullable</span><span class='inside_if'>(Of Double)</span>)</span><br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ..... ........ <span class='inside_if'>?</span>.<span class='inside_if'>?</span>..<span class='inside_if'>?</span>.. <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Reset</span>&#40;)</span> Implements CAPEOPEN110.ICapeParameter.Reset<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>.... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate</span>&#40;ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeParameter.Validate<br>&nbsp;&nbsp; .. <br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; ..... ........ ........ ..... ..... ..... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate1</span>&#40;ByVal value <span class='type'>As Double</span>, ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeRealParameterSpec.Validate<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . <span class='inside_if'>?</span> ... ... <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal value <span class='type'>As Integer</span>)</span><br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ..... ........ <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Reset</span>&#40;)</span> Implements CAPEOPEN110.ICapeParameter.Reset<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>.... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate</span>&#40;ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeParameter.Validate<br>&nbsp;&nbsp; .. <br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; ..... ........ ..... ..... ..... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate1</span>&#40;ByVal value <span class='type'>As Integer</span>, ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeIntegerParameterSpec.Validate<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . <span class='inside_if'>?</span> ... .... <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal value <span class='type'>As CAPEOPEN110.CapeParamMode</span>)</span><br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ..... ........ <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Reset</span>&#40;)</span> Implements CAPEOPEN110.ICapeParameter.Reset<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>.... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate</span>&#40;ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeParameter.Validate<br>&nbsp;&nbsp; .. <br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; ..... ........ ..... ..... ..... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate1</span>&#40;ByVal value <span class='type'>As String</span>, ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeOptionParameterSpec.Validate<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . <span class='inside_if'>?</span> ... ... <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal value <span class='type'>As Boolean</span>)</span><br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ..... ........ <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Reset</span>&#40;)</span> Implements CAPEOPEN110.ICapeParameter.Reset<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>.... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate</span>&#40;ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeParameter.Validate<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; ..... ........ ..... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate1</span>&#40;ByVal value <span class='type'>As Boolean</span>, ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeBooleanParameterSpec.Validate<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . . .<span class='inside_if'>?</span>.. <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameters<span class='inside_if'>(&#41; <span class='type'>As CCapeRealParameter</span>)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp;&nbsp;&nbsp;<span class='inside_if'>?</span>...<p class='inside_loop'>[<span class='inside_if'>?</span>.]</p><span class='inside_if'>?</span>.. ..... ....<span class='inside_if'>(....|.)</span>... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate2</span>&#40;ByVal value <span class='type'>As Object</span>, ByRef message <span class='type'>As Object</span>&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeArrayParameterSpec.Validate<br>&nbsp;&nbsp;..<p class='inside_loop'>[..]</p>.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . . .<span class='inside_if'>?</span>.. <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameters<span class='inside_if'>(&#41; <span class='type'>As CCapeIntegerParameter</span>)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>...<p class='inside_loop'>[<span class='inside_if'>?</span>.]</p><span class='inside_if'>?</span>.. ..... ....<span class='inside_if'>(....|.)</span>... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate2</span>&#40;ByVal value <span class='type'>As Object</span>, ByRef message <span class='type'>As Object</span>&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeArrayParameterSpec.Validate<br>&nbsp;&nbsp;..<p class='inside_loop'>[..]</p>.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . . .<span class='inside_if'>?</span>.. <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameters<span class='inside_if'>(&#41; <span class='type'>As CCapeOptionParameter</span>)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>...<p class='inside_loop'>[<span class='inside_if'>?</span>.]</p><span class='inside_if'>?</span>.. ..... ....<span class='inside_if'>(....|.)</span>... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate2</span>&#40;ByVal value <span class='type'>As Object</span>, ByRef message <span class='type'>As Object</span>&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeArrayParameterSpec.Validate<br>&nbsp;&nbsp;..<p class='inside_loop'>[..]</p>.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. . . .<span class='inside_if'>?</span>.. <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameters<span class='inside_if'>(&#41; <span class='type'>As CCapeBooleanParameter</span>)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='inside_if'>?</span>...<p class='inside_loop'>[<span class='inside_if'>?</span>.]</p><span class='inside_if'>?</span>.. ..... ....<span class='inside_if'>(....|.)</span>... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate2</span>&#40;ByVal value <span class='type'>As Object</span>, ByRef message <span class='type'>As Object</span>&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeArrayParameterSpec.Validate<br>&nbsp;&nbsp;..<p class='inside_loop'>[..]</p>.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp;. <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Stream Type Classes"<br> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <span class='comment'>'</span> <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Port Type Classes"<br> . <span class='inside_if'>?</span> . ... <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal type <span class='type'>As CAPEOPEN110.CapePortType</span>, ByVal direction <span class='type'>As CAPEOPEN110.CapePortDirection</span>)</span><br>&nbsp;&nbsp; ........ <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Connect</span>&#40;ByVal objectToConnect <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeUnitPort.Connect<br>&nbsp;&nbsp;.....<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ..... <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Disconnect</span>&#40;)</span> Implements CAPEOPEN110.ICapeUnitPort.Disconnect<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ...... <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Collection Classes"<br> . . . . . . . . . . . . . . . . . . <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Object, Unit, Material and Property Package Classes"<br> . <span class='inside_if'>?</span> . .. <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameters <span class='type'>As CCapeParameterCollection</span>)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal parameters <span class='type'>As CCapeParameterCollection</span>)</span><br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Edit</span>&#40;)</span> Implements CAPEOPEN110.ICapeUtilities.Edit<br>&nbsp;&nbsp;<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Initialize</span>&#40;)</span> Implements CAPEOPEN110.ICapeUtilities.Initialize<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; ..... ..... <br>&nbsp;&nbsp;Public Sub <span class='method_name'>Terminate</span>&#40;)</span> Implements CAPEOPEN110.ICapeUtilities.Terminate<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; . . . . .. <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal parameters <span class='type'>As CCapeParameterCollection</span>, ByVal ports <span class='type'>As CCapeUnitPortCollection</span>)</span><br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal parameters <span class='type'>As CCapeParameterCollection</span>, ByVal ports <span class='type'>As CCapeUnitPortCollection</span>)</span><br>&nbsp;&nbsp;....<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>Calculate</span>&#40;)</span> Implements CAPEOPEN110.ICapeUnit.Calculate<br>&nbsp;&nbsp; ..... <br>&nbsp;&nbsp;Public Function <span class='method_name'>Validate</span>&#40;ByRef message <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeUnit.Validate<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; ...... . . . ..... <br>&nbsp;&nbsp;Public Sub <span class='method_name'>CreateTable</span>&#40;)</span><br>&nbsp;&nbsp; ...<span class='comment'>'</span> .................... .................... .................... ... <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <span class='comment'>'</span><br>&nbsp;&nbsp;Public Sub <span class='method_name'>New</span>&#40;ByVal name <span class='type'>As String</span>, ByVal description <span class='type'>As String</span>, ByVal parameters <span class='type'>As CCapeParameterCollection</span>)</span><br>&nbsp;&nbsp;....<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>ClearAllProps</span>&#40;)</span> Implements CAPEOPEN110.ICapeThermoMaterial.ClearAllProps<br>&nbsp;&nbsp; . <p class='inside_loop'>[.]</p><p class='inside_loop'>[.]</p><p class='inside_loop'>[.]</p><p class='inside_loop'>[.]</p> <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>CopyFromMaterial</span>&#40;ByRef source <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.CopyFromMaterial<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>CreateMaterial</span>&#40;&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoMaterial.CreateMaterial<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>GetOverallProp</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal basis <span class='type'>As String</span>, ByRef results <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.GetOverallProp<br>&nbsp;&nbsp; .. <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>GetPresentPhases</span>&#40;ByRef phaseLabels <span class='type'>As Object</span>, ByRef phaseStatus <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.GetPresentPhases<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>GetSinglePhaseProp</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal phaseLabel <span class='type'>As String</span>, ByVal basis <span class='type'>As String</span>, ByRef results <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.GetSinglePhaseProp<br>&nbsp;&nbsp;..<span class='inside_if'>(.|.|.)</span><br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>GetTPfraction</span>&#40;ByVal phaseLabel <span class='type'>As String</span>, ByRef temperature <span class='type'>As Double</span>, ByRef pressure <span class='type'>As Double</span>, ByRef composition <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.GetTPfraction<br>&nbsp;&nbsp;.........<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>GetTwoPhaseProp</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal phaseLabels <span class='type'>As Object</span>, ByVal basis <span class='type'>As String</span>, ByRef results <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.GetTwoPhaseProp<br>&nbsp;&nbsp;...<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>SetOverallProp</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal basis <span class='type'>As String</span>, ByVal values <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.SetOverallProp<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>SetPresentPhases</span>&#40;ByVal phaseLabels <span class='type'>As Object</span>, ByVal phaseStatus <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.SetPresentPhases<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>SetSinglePhaseProp</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal phaseLabel <span class='type'>As String</span>, ByVal basis <span class='type'>As String</span>, ByVal values <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.SetSinglePhaseProp<br>&nbsp;&nbsp;.<span class='inside_if'>(.|.|.)</span><br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>SetTwoPhaseProp</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal phaseLabels <span class='type'>As Object</span>, ByVal basis <span class='type'>As String</span>, ByVal values <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoMaterial.SetTwoPhaseProp<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; . . <span class='inside_if'>?</span> ..... . . <br>&nbsp;&nbsp;Public Sub <span class='method_name'>CreateTable</span>&#40;)</span><br>&nbsp;&nbsp; ....................................... <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>GetCompoundConstant</span>&#40;ByVal props <span class='type'>As Object</span>, ByVal compIds <span class='type'>As Object</span>&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetCompoundConstant<br>&nbsp;&nbsp;......<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>GetCompoundList</span>&#40;ByRef compIds <span class='type'>As Object</span>, ByRef formulae <span class='type'>As Object</span>, ByRef names <span class='type'>As Object</span>, ByRef boilTemps <span class='type'>As Object</span>, ByRef molwts <span class='type'>As Object</span>, ByRef casnos <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetCompoundList<br>&nbsp;&nbsp;...............&nbsp;&nbsp; <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>GetConstPropList</span>&#40;&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetConstPropList<br>&nbsp;&nbsp;......<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>GetNumCompounds</span>&#40;&#41; <span class='type'>As Integer</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetNumCompounds<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>GetPDependentProperty</span>&#40;ByVal props <span class='type'>As Object</span>, ByVal pressure <span class='type'>As Double</span>, ByVal compIds <span class='type'>As Object</span>, ByRef propVals <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetPDependentProperty<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>GetPDependentPropList</span>&#40;&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetPDependentPropList<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>GetTDependentProperty</span>&#40;ByVal props <span class='type'>As Object</span>, ByVal temperature <span class='type'>As Double</span>, ByVal compIds <span class='type'>As Object</span>, ByRef propVals <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetTDependentProperty<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>GetTDependentPropList</span>&#40;&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoCompounds.GetTDependentPropList<br>&nbsp;&nbsp;..<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Overridable Function <span class='method_name'>GetNumPhases</span>&#40;&#41; <span class='type'>As Integer</span> Implements CAPEOPEN110.ICapeThermoPhases.GetNumPhases<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Function <span class='method_name'>GetPhaseInfo</span>&#40;ByVal phaseLabel <span class='type'>As String</span>, ByVal phaseAttribute <span class='type'>As String</span>&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoPhases.GetPhaseInfo<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>GetPhaseList</span>&#40;ByRef phaseLabels <span class='type'>As Object</span>, ByRef stateOfAggregation <span class='type'>As Object</span>, ByRef keyCompoundId <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoPhases.GetPhaseList<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Overridable Sub <span class='method_name'>CalcAndGetFugacityCoefficient</span>&#40;ByVal phaseLabel <span class='type'>As String</span>, ByVal temperature <span class='type'>As Double</span>, ByVal pressure <span class='type'>As Double</span>, ByVal moleNumbers <span class='type'>As Object</span>, ByVal fFlags <span class='type'>As Integer</span>, ByRef lnPhi <span class='type'>As Object</span>, ByRef lnPhiDT <span class='type'>As Object</span>, ByRef lnPhiDP <span class='type'>As Object</span>, ByRef lnPhiDn <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.CalcAndGetFugacityCoefficient<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>CalcSinglePhaseProp</span>&#40;ByVal props <span class='type'>As Object</span>, ByVal phaseLabel <span class='type'>As String</span>)</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.CalcSinglePhaseProp<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>CalcTwoPhaseProp</span>&#40;ByVal props <span class='type'>As Object</span>, ByVal phaseLabels <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.CalcTwoPhaseProp<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>CalcAllSinglePhaseProp</span>&#40;ByVal phaseLabel <span class='type'>As String</span>)</span><br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>CalcAlloverallProp</span>&#40;)</span><br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>CalcAllTwoPhaseProp</span>&#40;ByVal phaseLabels <span class='type'>As Object</span>)</span><br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Function <span class='method_name'>CheckSinglePhasePropSpec</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal phaseLabel <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.CheckSinglePhasePropSpec<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Function <span class='method_name'>CheckTwoPhasePropSpec</span>&#40;ByVal <p class='inside_loop'>[property]</p> <span class='type'>As String</span>, ByVal phaseLabels <span class='type'>As Object</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.CheckTwoPhasePropSpec<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Function <span class='method_name'>GetSinglePhasePropList</span>&#40;&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.GetSinglePhasePropList<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Function <span class='method_name'>GetTwoPhasePropList</span>&#40;&#41; <span class='type'>As Object</span> Implements CAPEOPEN110.ICapeThermoPropertyRoutine.GetTwoPhasePropList<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Sub <span class='method_name'>CalcEquilibrium</span>&#40;ByVal specification1 <span class='type'>As Object</span>, ByVal specification2 <span class='type'>As Object</span>, ByVal solutionType <span class='type'>As String</span>)</span> Implements CAPEOPEN110.ICapeThermoEquilibriumRoutine.CalcEquilibrium<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public MustOverride Function <span class='method_name'>CheckEquilibriumSpec</span>&#40;ByVal specification1 <span class='type'>As Object</span>, ByVal specification2 <span class='type'>As Object</span>, ByVal solutionType <span class='type'>As String</span>&#41; <span class='type'>As Boolean</span> Implements CAPEOPEN110.ICapeThermoEquilibriumRoutine.CheckEquilibriumSpec<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>SetMaterial</span>&#40;ByVal material <span class='type'>As Object</span>)</span> Implements CAPEOPEN110.ICapeThermoContext.SetMaterial<br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>SetMaterialByRef</span>&#40;ByRef material As )</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Function <span class='method_name'>ReturnMaterial</span>&#40;)</span><br>&nbsp;&nbsp;.<br>&nbsp;&nbsp;End Function<br>&nbsp;&nbsp; <br>&nbsp;&nbsp;Public Sub <span class='method_name'>DisposeMaterial</span>&#40;)</span><br>&nbsp;&nbsp; . <br>&nbsp;&nbsp;End Sub<br>&nbsp;&nbsp; . <br>#End Region<br> <br>#Region "&nbsp;&nbsp;&nbsp;&nbsp;Enums"<br> . .......... . . ....... . . .. . . ......................... . . ... . . ... . <br>#End Region<br> .
</div></body></html>
